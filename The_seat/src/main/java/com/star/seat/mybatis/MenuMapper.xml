<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu">
	<!-- 해당 매장의 메뉴 정보를 추가하는 method -->
	<insert id="addMenu" parameterType="menuDto">
		insert into storeMenu
		(num, storeNum, menuImage, menuName, content, price, best, category)
		values(storeMenu_seq.nextval, #{storeNum}, #{menuImage}, #{menuName}, #{content}, #{price}, 'no', #{category})
	</insert>
	
	<!-- 해당 매장의 메뉴 정보를 가져오는 method (사장님)-->	
	<select id="getMenuList" parameterType="storeDto" resultType="menuDto">
		select storeMenu.num as num, menuImage, menuName, content, price, best, storeMenu.category as category
		from storeMenu
		inner join store
		on store.num=storeMenu.storeNum		
		<choose>
			<when test="category eq null">
				where store.owner=#{owner} and store.num=#{num}
			</when>
			<when test="category neq null">
				where store.owner=#{owner} and store.num=#{num}
				and storeMenu.category=#{category}
			</when>
		</choose>
	</select>
	
	<!-- 해당 매장의 메뉴 정보를 가져오는 method (유저)-->
	<select id="getMenuList_user" parameterType="storeDto" resultType="menuDto">
		select *
		from storeMenu
		where storeNum=#{num}
	</select>
	
	<!-- 해당 매장의 메뉴 정보를 삭제하는 method -->
	<delete id="deleteMenu" parameterType="menuDto">
		delete from storeMenu
		where num=#{num}
	</delete>
	
	<!-- 해당 매장의 메뉴를 best로 설정 및 취소하는 method -->
	<update id="bestOnOff" parameterType="menuDto">
		update storeMenu
		set best=#{best}
		where num=#{num}
	</update>
	
	<!-- 해당 매장의 베스트 메뉴 수를 가져오는 method -->
	<select id="bestCount" parameterType="storeDto" resultType="int">
		select nvl(max(rnum),0)
		from 
			(select result1.*, rownum as rnum
			from
		    	(select *
		    	from storeMenu
		    	inner join store
		    	on store.num=storeMenu.storeNum
		    	where best='yes' and store.num=#{num} 
		    	and store.owner=#{owner}) result1)
	</select>
	
	<!-- 해당 매장의 메뉴 전체 정보를 삭제하는 method -->
	<delete id="deleteAllMenu" parameterType="menuDto">
		delete
		from storeMenu
		where storeNum=#{storeNum}
	</delete>
	
	<!-- 매장 카테고리를 추가하는 method -->
	<update id="addCategory" parameterType="storeDto">
		update store
		set category=#{category}
		where num=#{num}
	</update>
	
	<!-- 매장 정보를 삭제하는 method -->
	<delete id="deleteStore" parameterType="storeDto">
		delete
		from store
		where num=#{num} and owner=#{owner}
	</delete>
</mapper>
